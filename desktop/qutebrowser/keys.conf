# vim: ft=conf
#
# In this config file, qutebrowser's key bindings are configured.
# The format looks like this:
#
# [keymode]
#
# command
#   keychain
#   keychain2
#   ...
#
# All blank lines and lines starting with '#' are ignored.
# Inline-comments are not permitted.
#
# keymode is a comma separated list of modes in which the key binding should be
# active. If keymode starts with !, the key binding is active in all modes
# except the listed modes.
#
# For special keys (can't be part of a keychain), enclose them in `<`...`>`.
# For modifiers, you can use either `-` or `+` as delimiters, and these names:
#
#  * Control: `Control`, `Ctrl`
#  * Meta:    `Meta`, `Windows`, `Mod4`
#  * Alt:     `Alt`, `Mod1`
#  * Shift:   `Shift`
#
# For simple keys (no `<>`-signs), a capital letter means the key is pressed
# with Shift. For special keys (with `<>`-signs), you need to explicitly add
# `Shift-` to match a key pressed with shift.
#
# Note that default keybindings are always bound, and need to be explicitly
# unbound if you wish to remove them:
#
# <unbound>
#   keychain
#   keychain2
#   ...

[!normal]

leave-mode
    <escape>

[normal]
# Keybindings for normal mode.

clear-keychain ;; search ;; fullscreen --leave
    <escape>

# Page nav

# Page manip
reload
    r
    <f5>
reload -f
    R
    <ctrl-f5>

set-cmd-text -s :open
    a
set-cmd-text -s :open -t
    A
set-cmd-text -s :open -b
    Control-a
set-cmd-text -s :open -w
    Control-A

# Search
# Search forward
set-cmd-text /
    ;
set-cmd-text :
    :
search-next
    .
search-prev
    ,


# Tabs
tab-close
    x
undo
    X

tab-clone
    d

# Tab nav
tab-prev
    Control-j
tab-next
    Control-l
tab-focus 1
    h
tab-focus -1
    H

tab-move -
    Control-J
tab-move +
    Control-L
tab-move 1
    Control-h
tab-move -1
    Control-H

tab-focus 1
    1
tab-focus 2
    2
tab-focus 3
    3
tab-focus 4
    4
tab-focus 5
    5
tab-focus 6
    6
tab-focus 7
    7
tab-focus 8
    8
tab-focus 9
    9

# Back/Forward
back
    u
    <back>
back -t
    U
forward
    o
    <forward>
forward -t
    O

fullscreen
    <f11>

# Selection
hint links normal
    s
hint links tab-fg
    S
hint links --rapid tab-bg
    Control-s
hint links window
    Control-S

hint all yank
    c
yank pretty-url
    C
open {clipboard}
    v
open -t {clipboard}
    V

hint all download
    D

enter-mode insert
    e
hint inputs
    E

# Scrolling
scroll left
    j
scroll down
    k
scroll up
    i
scroll right
    l

scroll-page -0.4 0
    J
scroll-page 0 0.8
    K
scroll-page 0 -0.8
    I
scroll-page 0.4 0
    L

scroll-perc 0
    Control-i
scroll-perc
    Control-k

# Marks
enter-mode jump_mark
    m
enter-mode set_mark
    M

# Zoom
zoom-out
    Z
zoom-in
    z
zoom
    =

# Dev
inspector
    <f12>
view-source
    Control-<f12>

# Misc
follow-selected
    <return>
    <enter>
follow-selected -t
    <shift-return>
    <shift-enter>

tab-pin
    P

record-macro
    Y
run-macro
    y

[insert]
# Keybindings for insert mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.
# Useful hidden commands to map in this section:
#  * `open-editor`: Open a texteditor with the focused field.
#  * `paste-primary`: Paste primary selection at cursor position.

open-editor
    <ctrl-e>

[hint]
# Keybindings for hint mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.
# Useful hidden commands to map in this section:
#  * `follow-hint`: Follow the currently selected hint.

follow-hint
    <return>
    <shift-return>
    <enter>
    <shift-enter>

[passthrough]
# Keybindings for passthrough mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.

[command]
# Keybindings for command mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.
# Useful hidden commands to map in this section:
#  * `command-history-prev`: Switch to previous command in history.
#  * `command-history-next`: Switch to next command in history.
#  * `completion-item-focus`: Select another item in completion.
#  * `command-accept`: Execute the command currently in the commandline.

command-history-prev
    <ctrl-p>

command-history-next
    <ctrl-n>

completion-item-focus prev
    <shift-tab>
    <up>

completion-item-focus next
    <tab>
    <down>

completion-item-focus next-category
    <ctrl-tab>

completion-item-focus prev-category
    <ctrl-shift-tab>

command-accept
    <return>
    <shift-return>
    <enter>
    <shift-enter>

[prompt]
# Keybindings for prompts in the status line.
# You can bind normal keys in this mode, but they will be only active
# when a yes/no-prompt is asked. For other prompt modes, you can only
# bind special keys.
# Useful hidden commands to map in this section:
#  * `prompt-accept`: Confirm the entered value.
#  * `prompt-accept yes`: Answer yes to a yes/no question.
#  * `prompt-accept no`: Answer no to a yes/no question.

prompt-accept
    <return>
    <shift-return>
    <enter>
    <shift-enter>

prompt-accept yes
    y

prompt-accept no
    n

prompt-open-download
    <ctrl-x>

prompt-item-focus prev
    <shift-tab>
    <up>

prompt-item-focus next
    <tab>
    <down>

[command,prompt]

rl-yank
    <ctrl-c>

[caret]
#
#toggle-selection
#    v
#    <space>
#
#drop-selection
#    <ctrl-space>
#
#enter-mode normal
#    c
#
#move-to-next-line
#    j
#
#move-to-prev-line
#    k
#
#move-to-next-char
#    l
#
#move-to-prev-char
#    h
#
#move-to-end-of-word
#    e
#
#move-to-next-word
#    w
#
#move-to-prev-word
#    b
#
#move-to-start-of-next-block
#    ]
#
#move-to-start-of-prev-block
#    [
#
#move-to-end-of-next-block
#    }
#
#move-to-end-of-prev-block
#    {
#
#move-to-start-of-line
#    0
#
#move-to-end-of-line
#    $
#
#move-to-start-of-document
#    gg
#
#move-to-end-of-document
#    G
#
#yank selection -s
#    Y
#
#yank selection
#    y
#    <return>
#    <ctrl-m>
#    <ctrl-j>
#    <shift-return>
#    <enter>
#    <shift-enter>
#
#scroll left
#    H
#
#scroll down
#    J
#
#scroll up
#    K
#
#scroll right
#    L
#
#